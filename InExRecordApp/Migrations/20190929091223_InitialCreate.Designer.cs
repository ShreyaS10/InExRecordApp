// <auto-generated />
using System;
using InExRecordApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InExRecordApp.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190929091223_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("InExRecordApp.Models.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasConversion(new ValueConverter<decimal, decimal>(v => default(decimal), v => default(decimal), new ConverterMappingHints(precision: 38, scale: 17)))
                        .HasColumnType("money");

                    b.Property<string>("BankName")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ChequeNo")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("ExpenseType")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Particular")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("InExRecordApp.Models.Income", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasConversion(new ValueConverter<decimal, decimal>(v => default(decimal), v => default(decimal), new ConverterMappingHints(precision: 38, scale: 17)))
                        .HasColumnType("money");

                    b.Property<string>("BankName")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ChequeNo")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("IncomeType")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<string>("Particular")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Incomes");
                });

            modelBuilder.Entity("InExRecordApp.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("ContactNo")
                        .IsRequired()
                        .HasColumnType("varchar(11)");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new { Id = 1, Address = "Banani", ContactNo = "01713747775", Designation = "Sr. Accountant", Email = "siddharthya@gmail.com", Name = "Siddharthya Chowdhury", Password = "$2b$10$skj3F34wsh1Ibp1w7YkWRuUxIl1E.lmyAMbkjARJNxnkECa7s5MjK" },
                        new { Id = 2, Address = "Dhanmondi", ContactNo = "01916747456", Designation = "Jr. Accountant", Email = "sohini@gmail.com", Name = "Sohini Azam", Password = "$2b$10$zaN7m9AYrgPa8aqPBeZLd.AVonVuWcvuFxowLqGuNDhCwTEK.1NPK" },
                        new { Id = 3, Address = "Mohakhali DOHS", ContactNo = "01816749274", Designation = "Jr. Accountant", Email = "sen@gmail.com", Name = "A K Sen", Password = "$2b$10$w5X8zTKisxAWuYJ/rp5W0Ong0S.GU6Veht1/XN5ed28by0p/P3Ntm" },
                        new { Id = 4, Address = "Gulshan", ContactNo = "01772939284", Designation = "Sr. Accountant", Email = "thomas@gmail.com", Name = "Thomas Barua", Password = "$2b$10$OqP8jyPp189i13aQ7xsYAu06D4JuSUCZn3ilT8IT5odmXrpobMWAi" }
                    );
                });

            modelBuilder.Entity("InExRecordApp.Models.Expense", b =>
                {
                    b.HasOne("InExRecordApp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("InExRecordApp.Models.Income", b =>
                {
                    b.HasOne("InExRecordApp.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
